
import java.io.File;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sebastianderooy
 */
public class CreateBudget extends javax.swing.JFrame {

    /**
     * Creates new form CreateBudget
     */
    public CreateBudget() {
        initComponents();
        //set-up for frame
        chkMonthly.setSelected(true);
        lblBNError.setText("");
        lblBTError.setText("");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblCreate = new javax.swing.JLabel();
        lblBudgetName = new javax.swing.JLabel();
        lblBudgetType = new javax.swing.JLabel();
        txtBudgetName = new javax.swing.JTextField();
        lblBNError = new javax.swing.JLabel();
        lblBTError = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        chkWeekly = new javax.swing.JCheckBox();
        chkMonthly = new javax.swing.JCheckBox();
        lblUser = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));

        lblCreate.setBackground(new java.awt.Color(255, 255, 255));
        lblCreate.setFont(new java.awt.Font("Avenir Next", 1, 24)); // NOI18N
        lblCreate.setForeground(new java.awt.Color(0, 102, 255));
        lblCreate.setText("Create");

        lblBudgetName.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        lblBudgetName.setForeground(new java.awt.Color(0, 0, 255));
        lblBudgetName.setText("Budget Name");

        lblBudgetType.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        lblBudgetType.setForeground(new java.awt.Color(0, 0, 255));
        lblBudgetType.setText("Budget Type");

        txtBudgetName.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        txtBudgetName.setForeground(new java.awt.Color(0, 51, 255));

        lblBNError.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        lblBNError.setForeground(new java.awt.Color(255, 0, 51));
        lblBNError.setText("Error");

        lblBTError.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        lblBTError.setForeground(new java.awt.Color(255, 0, 51));
        lblBTError.setText("Error");

        btnCreate.setBackground(new java.awt.Color(0, 102, 255));
        btnCreate.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        chkWeekly.setForeground(new java.awt.Color(0, 51, 255));
        chkWeekly.setText("Weekly");
        chkWeekly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkWeeklyActionPerformed(evt);
            }
        });

        chkMonthly.setForeground(new java.awt.Color(0, 51, 255));
        chkMonthly.setText("monthly");
        chkMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMonthlyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBudgetName)
                            .addComponent(lblBudgetType))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(chkWeekly)
                                .addGap(18, 18, 18)
                                .addComponent(chkMonthly)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblBTError))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCreate)
                                    .addComponent(txtBudgetName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblBNError))))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(btnCreate)))
                .addContainerGap(162, Short.MAX_VALUE))
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblUser)
                .addGap(101, 101, 101))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreate)
                    .addComponent(lblUser))
                .addGap(45, 45, 45)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBudgetName)
                    .addComponent(txtBudgetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBNError))
                .addGap(22, 22, 22)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBudgetType)
                    .addComponent(lblBTError)
                    .addComponent(chkWeekly)
                    .addComponent(chkMonthly))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkWeeklyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkWeeklyActionPerformed
       //if other option is checked it disables this option
        chkMonthly.setSelected(false);
    }//GEN-LAST:event_chkWeeklyActionPerformed

    private void chkMonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMonthlyActionPerformed
       //if other option is checked it disables this option
        chkWeekly.setSelected(false);
    }//GEN-LAST:event_chkMonthlyActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        //retrives the budget's name from the label
        String name = txtBudgetName.getText();
        
        //creating variables for later use
        String type = "";
        boolean nvalid = true;
        boolean tvalid = true;
        
        //validates name input
         for (int i = 0; i < name.length(); i++) 
        {
           
            if (nvalid)
            {
            char c = name.charAt(i);
            if ((c >= 65 && c <= 90) || (c >= 97 && c <= 122) || c == 32)
            {
                nvalid = true;
            } else {
                nvalid = false;
            }
            }
        }
         
         
         //outputs to user whether data is valid
         if (nvalid)
         {
             lblBNError.setText("");
         } else {
             lblBNError.setText("Invalid characters entered");
         }
         
         
         //checks whether either checkbox option is chosen
         if (chkMonthly.isSelected() || chkWeekly.isSelected())
         {
             tvalid = true;
             //checks which option is selected
             if (chkMonthly.isSelected())
             {
                 type = "Monthly";
             } else {
                 type = "Weekly";
             }
         } else {
             tvalid = false;
         }
         
         
         
         if (nvalid && tvalid)
         {
             String databaseURL = "jdbc:ucanaccess:///Users/SebastiandeRooy/FinBud/FinBudDB.accdb";
        
             
             
        try {
            Connection connection = DriverManager.getConnection(databaseURL);
            
            System.out.println("Connected");
            //creates new budget
             String sql = "INSERT INTO tblBudget "
                     + "(BUDGETNAME, BUDGETTYPE, EXPENSES, INCOMES)"
                     + "VALUES ('" + name + "', '" + type + "', 0, 0)";
             
             Statement state = connection.createStatement();
             
             int rows = state.executeUpdate(sql);
            
            if (rows > 0)
            {
                System.out.println("Completed");
            }
            
            int bID = 0;
            int uID = 0;
            String uname = "";
            //getting budget ID
            Budget budget = new Budget(name);
            bID = budget.getID();
            System.out.println(bID);
            
            try 
            {
                //getting current user in order to get user ID
            Scanner scf = new Scanner(new File("/Users/SebastiandeRooy/FinBud/CurrentUser.txt"));
            uname = scf.nextLine();
            } catch (FileNotFoundException e)
            {
                System.out.println("File not found");
            }
            
            //getting user ID
            User user = new User(uname);
            uID = user.getID();
            System.out.println(uID);
            
            //inserting user and budget ID into joint ID table
            sql = "INSERT INTO tblID (USERID, BUDGETID)"
                    + "VALUES (" + uID + ", " + bID + ")";
            
            rows = state.executeUpdate(sql);
            
            if (rows > 0)
            {
                System.out.println("Completed");
            }
            
            //creating profile jframe
            Profile profile = new Profile();
            profile.setVisible(true);
            profile.setUser(lblUser.getText());
            dispose();
             
             
         } catch (SQLException ex)
         {
             Logger.getLogger(DBUI.class.getName()).log(Level.SEVERE, null, ex);
         }
             
         }
             
        
    }//GEN-LAST:event_btnCreateActionPerformed

    //sets user label to user name
    public void setUser(String u)
    {
        lblUser.setText(u);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateBudget().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JCheckBox chkMonthly;
    private javax.swing.JCheckBox chkWeekly;
    private javax.swing.JLabel lblBNError;
    private javax.swing.JLabel lblBTError;
    private javax.swing.JLabel lblBudgetName;
    private javax.swing.JLabel lblBudgetType;
    private javax.swing.JLabel lblCreate;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JTextField txtBudgetName;
    // End of variables declaration//GEN-END:variables
}
